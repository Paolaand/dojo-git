"use strict";(self.webpackChunkdojo_git=self.webpackChunkdojo_git||[]).push([[765],{5227:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=n(4848),r=n(8453);const i={sidebar_position:2,sidebar_label:"Comandos B\xe1sicos"},l="Comandos B\xe1sicos de Git",o={id:"Tutorial-Git/Comandos-Basicos",title:"Comandos B\xe1sicos de Git",description:"Aprendamos los primeros comandos con git.",source:"@site/docs/Tutorial-Git/Comandos-Basicos.md",sourceDirName:"Tutorial-Git",slug:"/Tutorial-Git/Comandos-Basicos",permalink:"/dojo-git/docs/Tutorial-Git/Comandos-Basicos",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Comandos B\xe1sicos"},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/dojo-git/docs/Tutorial-Git/Git"},next:{title:"GitLab",permalink:"/dojo-git/docs/Tutorial-Git/GitLab"}},c={},d=[{value:"Versi\xf3n de git.",id:"versi\xf3n-de-git",level:3},{value:"Registrar nuevo usuario asociado a git.",id:"registrar-nuevo-usuario-asociado-a-git",level:3},{value:"Configuraci\xf3n de un canal seguro (SSH)",id:"configuraci\xf3n-de-un-canal-seguro-ssh",level:3},{value:"Generar una clave SSH.",id:"generar-una-clave-ssh",level:4},{value:"Init",id:"init",level:3},{value:"Help",id:"help",level:3},{value:"Status",id:"status",level:3},{value:"Add",id:"add",level:3},{value:"Commit",id:"commit",level:3},{value:"Diff",id:"diff",level:3},{value:"Log",id:"log",level:3},{value:"Ramas o Branch",id:"ramas-o-branch",level:3},{value:"Checkout",id:"checkout",level:3},{value:"Clone",id:"clone",level:3},{value:"Merge",id:"merge",level:3},{value:"Pull",id:"pull",level:3},{value:"Push",id:"push",level:3},{value:"Tag",id:"tag",level:3},{value:"Rebase",id:"rebase",level:3},{value:"Reset (Precauci\xf3n)",id:"reset-precauci\xf3n",level:3},{value:"Remove",id:"remove",level:3},{value:"Stash",id:"stash",level:3}];function t(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"comandos-b\xe1sicos-de-git",children:"Comandos B\xe1sicos de Git"}),"\n",(0,s.jsx)(a.p,{children:"Aprendamos los primeros comandos con git."}),"\n",(0,s.jsx)(a.h3,{id:"versi\xf3n-de-git",children:"Versi\xf3n de git."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-git",children:"git version\n"})}),"\n",(0,s.jsx)(a.h3,{id:"registrar-nuevo-usuario-asociado-a-git",children:"Registrar nuevo usuario asociado a git."}),"\n",(0,s.jsx)(a.admonition,{title:"Atenci\xf3n",type:"caution",children:(0,s.jsx)(a.p,{children:"No colocar informaci\xf3n sensible como nombre de usuario,el correo de su cuenta, podr\xeda traer problemas a futuro."})}),"\n",(0,s.jsx)(a.p,{children:"Para cambiar o agregar el nombre de usuario \ud83d\udc47\ud83c\udffd"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'git config --global user.name "mi nombre"\n'})}),"\n",(0,s.jsx)(a.p,{children:"Es recomendable utilizar el correo asociado a GitLab"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'git config --global user.email "myemail@example.com"\n'})}),"\n",(0,s.jsx)(a.p,{children:"Para dejar la rama develop como rama principal en lugar de master \ud83d\udc47\ud83c\udffd"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"git config --global init.defaultBranch develop\n"})}),"\n",(0,s.jsx)(a.p,{children:"Para activar los colores en la consola \ud83d\udc47\ud83c\udffd (Opcional)"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-git",children:"git config --global color.ui true\n"})}),"\n",(0,s.jsx)(a.p,{children:"Para verificar que se haya registrado correctamente:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-git",children:"git config user.name\r\ngit config user.email\n"})}),"\n",(0,s.jsx)(a.h3,{id:"configuraci\xf3n-de-un-canal-seguro-ssh",children:"Configuraci\xf3n de un canal seguro (SSH)"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.a,{href:"https://docs.gitlab.com/ee/user/ssh.html",children:"Generar llave SSH"})}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-git",children:"$ git config --global http.sslbackend schannel\n"})}),"\n",(0,s.jsx)(a.p,{children:"Si no utilizas la bandera global, puedes configurar un autor diferente para cada proyecto. Verifica la configuraci\xf3n con:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"$ git config --global --list\n"})}),"\n",(0,s.jsx)(a.h4,{id:"generar-una-clave-ssh",children:"Generar una clave SSH."}),"\n",(0,s.jsx)(a.p,{children:"Es posible que desees o debas utilizar una clave ssh, para generar un nuevo par de claves SSH debes:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Abrir una terminal en Linux o utilizar Git Bash en Windows."}),"\n",(0,s.jsx)(a.li,{children:"Genera el par de claves utilizando el cifrado ED25519:"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'$ ssh-keygen -t ed25519 -C "email@example.com"\n'})}),"\n",(0,s.jsx)(a.p,{children:"O mediante el cifrado RSA:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'$ ssh-keygen -o -t rsa -b 4096 -C "email@example.com"\n'})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Selecciona la ruta y el nombre donde guardar el par de claves SSH"}),"\n",(0,s.jsx)(a.li,{children:"Indica una clave para asegurar tu par de claves SSH"}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"init",children:"Init"}),"\n",(0,s.jsxs)(a.p,{children:["Crea un repositorio de git vac\xedo en una nueva carpeta. Las configuraciones, informaci\xf3n almacenada y dem\xe1s elementos del proyecto son almacenadas en el directorio ",(0,s.jsx)(a.strong,{children:"\u201c.git\u201d."})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git init\n"})}),"\n",(0,s.jsx)(a.h3,{id:"help",children:"Help"}),"\n",(0,s.jsx)(a.p,{children:"Otorga un acceso r\xe1pido a una gu\xeda extremadamente detallada de cada comando en git. O puede ser usada simplemente como un recordatorio de estos."}),"\n",(0,s.jsx)(a.p,{children:"Una vista r\xe1pida de los comandos disponibles."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git help\n"})}),"\n",(0,s.jsx)(a.p,{children:"Verificar todos los comandos disponibles."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git help -a\n"})}),"\n",(0,s.jsx)(a.p,{children:"Obtener ayuda espec\xedfica de un comando."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git help init\n"})}),"\n",(0,s.jsx)(a.h3,{id:"status",children:"Status"}),"\n",(0,s.jsx)(a.p,{children:"Muestra las diferencias entre el archivo \xedndice y el commit al cual apunta el HEAD actualmente, mostrar\xe1 los archivos sin a\xf1adir al repositorio, cambios y otras diferencias."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git status\n"})}),"\n",(0,s.jsx)(a.p,{children:"Devuelve ayuda sobre el comando status."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git help status\n"})}),"\n",(0,s.jsx)(a.h3,{id:"add",children:"Add"}),"\n",(0,s.jsx)(a.p,{children:"Permite a\xf1adir archivos al \xe1rbol (directorio, repositorio) de trabajo. Si no se utiliza git add, los nuevos archivos no se a\xf1adir\xe1n al \xe1rbol de trabajo, por lo que no se incluir\xe1n en las confirmaciones (commits)."}),"\n",(0,s.jsx)(a.p,{children:"A\xf1ade un archivo en el directorio de trabajo actual"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git add FooBar.java \n"})}),"\n",(0,s.jsx)(a.p,{children:"A\xf1ade un archivo que se encuentra bajo un directorio."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"$ git add /directorio/del/archivo/Foo.c\n"})}),"\n",(0,s.jsx)(a.p,{children:"Soporte para expresiones regulares!"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"$ git add ./*.txt\n"})}),"\n",(0,s.jsx)(a.h3,{id:"commit",children:"Commit"}),"\n",(0,s.jsxs)(a.p,{children:["Almacena el contenido actual del \xe1rea de preparaci\xf3n en un nuevo ",(0,s.jsx)(a.strong,{children:"\u201ccommit\u201d."})," Este commit contiene los cambios hechos m\xe1s un resumen proporcionado por el desarrollador."]}),"\n",(0,s.jsx)(a.p,{children:"Realiza un commit y a\xf1adele un mensaje."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'$ git commit -m "Initial Commit"\n'})}),"\n",(0,s.jsx)(a.h3,{id:"diff",children:"Diff"}),"\n",(0,s.jsx)(a.p,{children:"Muestra las diferencias entre un archivo en el directorio de trabajo, el \xedndice y los commits, muestra la diferencia entre un directorio de trabajo y el \xedndice."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git diff\n"})}),"\n",(0,s.jsx)(a.p,{children:"Muestra la diferencia entre el \xedndice y los commits m\xe1s recientes."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git diff --cached\n"})}),"\n",(0,s.jsx)(a.p,{children:"Muestra la diferencia entre el directorio de trabajo y el commit m\xe1s reciente."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git diff HEAD\n"})}),"\n",(0,s.jsx)(a.h3,{id:"log",children:"Log"}),"\n",(0,s.jsx)(a.p,{children:"Muestra los commits (cambios) registrados en el repositorio, muestra todos los commits."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git log\n"})}),"\n",(0,s.jsx)(a.p,{children:"Muestra un n\xfamero x de commits."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git log -n 10 \n"})}),"\n",(0,s.jsx)(a.p,{children:"Muestra solo los commits que se han combinado en el historial."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git log --merges\n"})}),"\n",(0,s.jsx)(a.h3,{id:"ramas-o-branch",children:"Ramas o Branch"}),"\n",(0,s.jsxs)(a.p,{children:["Hasta el momento solo hemos trabajado en la rama ",(0,s.jsx)(a.strong,{children:'"master"'})," o ",(0,s.jsx)(a.strong,{children:'"develop"'})," pero puede que necesitemos crear diferentes ramas para los seguimientos de git."]}),"\n",(0,s.jsx)(a.p,{children:"En un entorno de desarrollo de software en una empresa, las ramas que se crean pueden variar seg\xfan las pol\xedticas de desarrollo espec\xedficas de cada empresa, as\xed como tambi\xe9n dependen del flujo de trabajo y las necesidades del proyecto en particular. Sin embargo, hay algunas ramas comunes que se suelen utilizar en muchos casos. Aqu\xed hay algunas de las principales ramas que se pueden encontrar en un repositorio de Git en una empresa:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"main:"})," Esta es la rama principal del proyecto. Contiene el c\xf3digo estable y funcional que est\xe1 listo para ser desplegado en producci\xf3n. Todos los cambios importantes y completados se fusionan en esta rama despu\xe9s de una revisi\xf3n adecuada."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"develop:"})," Tambi\xe9n conocida como rama de desarrollo, esta rama contiene el c\xf3digo en desarrollo para la pr\xf3xima versi\xf3n del software. Es donde se fusionan los cambios de las ramas de caracter\xedsticas y se prueban en conjunto antes de ser fusionados en la rama principal."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"feature:"})," Se utilizan ramas de caracter\xedsticas para desarrollar nuevas funcionalidades o caracter\xedsticas. Cada vez que un desarrollador comienza a trabajar en una nueva caracter\xedstica, generalmente crea una rama de caracter\xedsticas a partir de la rama de desarrollo. Una vez que la caracter\xedstica est\xe1 completa y ha sido revisada, se fusiona de nuevo en la rama de desarrollo."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"hotfix:"})," Esta rama se utiliza para corregir problemas cr\xedticos en producci\xf3n. Si se descubre un error que necesita ser solucionado de inmediato, se crea una rama de hotfix a partir de la rama principal (main o master), se realizan las correcciones necesarias y luego se fusiona tanto en la rama principal como en la rama de desarrollo."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"release:"})," Se utiliza para preparar una nueva versi\xf3n del software para su lanzamiento. Se crean ramas de lanzamiento a partir de la rama de desarrollo y se realizan las pruebas finales y los ajustes necesarios antes de fusionar en la rama principal y etiquetar la versi\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Estas son algunas de las ramas comunes que se pueden encontrar en un flujo de trabajo t\xedpico de Git en una empresa, pero es importante recordar que las pr\xe1cticas de desarrollo pueden variar entre diferentes equipos y organizaciones. Adaptar el flujo de trabajo y las ramas espec\xedficas a las necesidades y requisitos del proyecto es clave para el \xe9xito del desarrollo de software en cualquier empresa."}),"\n",(0,s.jsxs)(a.p,{children:["Para administrar las ramas del repositorio ",(0,s.jsx)(a.strong,{children:"(branches)"}),". Puedes ver, editar, crear y borrar ramas ",(0,s.jsx)(a.strong,{children:"(branches)"}),", usando este comando.\r\nLista todas las ramas (remotas y locales)."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git branch -a\n"})}),"\n",(0,s.jsxs)(a.p,{children:["A\xf1ade una nueva rama ",(0,s.jsx)(a.strong,{children:"(branch)"})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git branch myNewBranch\n"})}),"\n",(0,s.jsx)(a.p,{children:"Elimina una rama"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git branch -d myBranch\n"})}),"\n",(0,s.jsx)(a.p,{children:"Renombra una rama"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git branch -m myBrachName myNewBrachName\n"})}),"\n",(0,s.jsx)(a.p,{children:"Nos muestra visualmente las ramas"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"git log --oneline --graph --all\n"})}),"\n",(0,s.jsx)(a.h3,{id:"checkout",children:"Checkout"}),"\n",(0,s.jsx)(a.p,{children:"Actualiza todos los archivos en el directorio de trabajo para que sean igual que las versiones almacenadas en el \xedndice, o en un \xe1rbol de trabajo especificado."}),"\n",(0,s.jsx)(a.p,{children:"Actualiza los archivos de la rama principal"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git checkout\n"})}),"\n",(0,s.jsx)(a.p,{children:"Actualiza los archivos de la rama especificada"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git checkout develop\n"})}),"\n",(0,s.jsx)(a.p,{children:"Crea una nueva rama y se cambia hacia ella."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git checkout -b new_feature\n"})}),"\n",(0,s.jsx)(a.h3,{id:"clone",children:"Clone"}),"\n",(0,s.jsx)(a.p,{children:"Clona, o copia, un repositorio existente en un nuevo directorio, tambi\xe9n a\xf1ade el seguimiento hacia las ramas existentes del repositorio que ha sido clonado, lo que permite subir (push) los archivos hacia una rama remota."}),"\n",(0,s.jsx)(a.p,{children:"Clonar el repositorio de jquery."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git clone https://github.com/jquery/jquery.git\n"})}),"\n",(0,s.jsx)(a.h3,{id:"merge",children:"Merge"}),"\n",(0,s.jsx)(a.p,{children:"Combina los cambios de commits realizados externamente dentro de la rama en la que se trabaja."}),"\n",(0,s.jsx)(a.p,{children:"Combina la rama especificada en la rama actual"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git merge new_feature\n"})}),"\n",(0,s.jsx)(a.p,{children:"Se asegura de generar un commit cuando se utiliza merge"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git merge --no-ff new_feature\n"})}),"\n",(0,s.jsx)(a.h3,{id:"pull",children:"Pull"}),"\n",(0,s.jsx)(a.p,{children:"Trae los cambios de un repositorio y los combina en otra rama diferente."}),"\n",(0,s.jsxs)(a.p,{children:["Actualiza el repositorio local, combinando los nuevos cambios de las ramas remotas ",(0,s.jsx)(a.strong,{children:'"origin"'})," y ",(0,s.jsx)(a.strong,{children:'"master".'})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git pull origin master\n"})}),"\n",(0,s.jsx)(a.h3,{id:"push",children:"Push"}),"\n",(0,s.jsx)(a.p,{children:"Env\xeda y combina los cambios de un repositorio local a un repositorio y rama remotos."}),"\n",(0,s.jsxs)(a.p,{children:["Env\xeda y combina cambios de un repositorio local hacia un repositorio remoto llamados ",(0,s.jsx)(a.strong,{children:'"origin"'})," y ",(0,s.jsx)(a.strong,{children:'"master"'}),", respectivamente."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git pull origin master\n"})}),"\n",(0,s.jsx)(a.h3,{id:"tag",children:"Tag"}),"\n",(0,s.jsx)(a.p,{children:"Permite marcar puntos espec\xedficos de la historia del repositorio."}),"\n",(0,s.jsx)(a.p,{children:"Crea una etiqueta anotada."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'$ git tag -a v1.4.0 -m "Version 1.4.0"\n'})}),"\n",(0,s.jsx)(a.p,{children:"Crea una etiqueta ligera."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git tag v1.4.0-SNAPSHOT\n"})}),"\n",(0,s.jsx)(a.h3,{id:"rebase",children:"Rebase"}),"\n",(0,s.jsx)(a.p,{children:"Toma todos los cambios que fueron registrados en una rama, y los repite dentro de otra rama. No reescribe los commits que se han empujado antes a un repositorio p\xfablico."}),"\n",(0,s.jsxs)(a.p,{children:["Integrar hot-fix dentro de la rama ",(0,s.jsx)(a.strong,{children:'"master"'})]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git rebase master hot-fix\n"})}),"\n",(0,s.jsx)(a.h3,{id:"reset-precauci\xf3n",children:"Reset (Precauci\xf3n)"}),"\n",(0,s.jsx)(a.p,{children:"Reinicia la referencia HEAD actual hacia un estado especificado. Esto permite deshacer combinaciones (merges), pulls, commits, adds y m\xe1s."}),"\n",(0,s.jsx)(a.p,{children:"Es un comando \xfatil, pero tambi\xe9n delicado si no se sabe lo que se est\xe1 haciendo. Reinicia el \xe1rea de preparaci\xf3n, con el \xfaltimo cambio registrado. (deja los directorios sin cambios)."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git reset\n"})}),"\n",(0,s.jsx)(a.p,{children:"Reinicia el \xe1rea de prepa de preparaci\xf3n, con el \xfaltimo cambio registrado, y reescribe el directorio de trabajo."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git reset --hard\n"})}),"\n",(0,s.jsx)(a.h3,{id:"remove",children:"Remove"}),"\n",(0,s.jsx)(a.p,{children:"Lo contrario de git add, git rm elimina los archivos del directorio de trabajo actual."}),"\n",(0,s.jsx)(a.p,{children:"Elimina FooBar.c"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git rm FooBar.c\n"})}),"\n",(0,s.jsx)(a.p,{children:"Elimina un archivo de un directorio"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git rm /directorio/del/archivo/FooBar.c\n"})}),"\n",(0,s.jsx)(a.h3,{id:"stash",children:"Stash"}),"\n",(0,s.jsx)(a.p,{children:"Usamos git stash para almacenar nuestros cambios cuando no est\xe1n listos para confirmarse y necesitamos cambiar a una rama diferente."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'$ git stash save "this is a message to display on the list"\n'})}),"\n",(0,s.jsx)(a.p,{children:"Aplicar para continuar haciendo cambios:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git stash apply\n"})}),"\n",(0,s.jsx)(a.p,{children:"Cada vez que guardamos un stash este se va apilando por lo que podemos usar el comando list para ver todos los elementos:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:"$ git stash list\n"})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function l(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);